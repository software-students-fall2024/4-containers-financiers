name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service: [machine-learning-client, web-app]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Debug directory structure
      run: ls -R

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install CUDA (for ML only)
      if: ${{ matrix.service == 'machine-learning-client' }}
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends wget gnupg
        wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-ubuntu2204.pin
        sudo mv cuda-ubuntu2204.pin /etc/apt/preferences.d/cuda-repository-pin-600
        wget https://developer.download.nvidia.com/compute/cuda/12.2.0/local_installers/cuda-repo-ubuntu2204-12-2-local_12.2.0-1_amd64.deb
        sudo dpkg -i cuda-repo-ubuntu2204-12-2-local_12.2.0-1_amd64.deb
        sudo cp /var/cuda-repo-ubuntu2204-12-2-local/cuda-*-keyring.gpg /usr/share/keyrings/
        sudo apt-get update
        sudo apt-get install -y cuda-toolkit-12-2 libcublas-12-0

    - name: Install dependencies
      working-directory: ${{ matrix.service }}
      run: |
        python -m pip install --upgrade pip
        python -m pip install pipenv
        pipenv install --dev

    - name: Run linting
      working-directory: ${{ matrix.service }}
      run: |
        if [ "${{ matrix.service }}" == "machine-learning-client" ]; then
          [ -f src/main.py ] && pipenv run pylint src/main.py || echo "src/main.py not found"
        elif [ "${{ matrix.service }}" == "web-app" ]; then
          [ -f app.py ] && pipenv run pylint app.py || echo "app.py not found"
        fi

    - name: Format code with Black
      working-directory: ${{ matrix.service }}
      run: pipenv run black --check .

    - name: Run tests
      working-directory: ${{ matrix.service }}
      run: pipenv run pytest
